// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AdminMsg.proto

#ifndef PROTOBUF_INCLUDED_AdminMsg_2eproto
#define PROTOBUF_INCLUDED_AdminMsg_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_AdminMsg_2eproto 

namespace protobuf_AdminMsg_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_AdminMsg_2eproto
namespace com {
namespace woqutech {
namespace admin {
class MsgCmd;
class MsgCmdDefaultTypeInternal;
extern MsgCmdDefaultTypeInternal _MsgCmd_default_instance_;
class MsgHeader;
class MsgHeaderDefaultTypeInternal;
extern MsgHeaderDefaultTypeInternal _MsgHeader_default_instance_;
class MsgHeaderWrap;
class MsgHeaderWrapDefaultTypeInternal;
extern MsgHeaderWrapDefaultTypeInternal _MsgHeaderWrap_default_instance_;
class MsgMetrics;
class MsgMetricsDefaultTypeInternal;
extern MsgMetricsDefaultTypeInternal _MsgMetrics_default_instance_;
class MsgResult;
class MsgResultDefaultTypeInternal;
extern MsgResultDefaultTypeInternal _MsgResult_default_instance_;
class MsgVal;
class MsgValDefaultTypeInternal;
extern MsgValDefaultTypeInternal _MsgVal_default_instance_;
class PairIntDbl;
class PairIntDblDefaultTypeInternal;
extern PairIntDblDefaultTypeInternal _PairIntDbl_default_instance_;
class PairStrDbl;
class PairStrDblDefaultTypeInternal;
extern PairStrDblDefaultTypeInternal _PairStrDbl_default_instance_;
class PairStrStr;
class PairStrStrDefaultTypeInternal;
extern PairStrStrDefaultTypeInternal _PairStrStr_default_instance_;
}  // namespace admin
}  // namespace woqutech
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::woqutech::admin::MsgCmd* Arena::CreateMaybeMessage<::com::woqutech::admin::MsgCmd>(Arena*);
template<> ::com::woqutech::admin::MsgHeader* Arena::CreateMaybeMessage<::com::woqutech::admin::MsgHeader>(Arena*);
template<> ::com::woqutech::admin::MsgHeaderWrap* Arena::CreateMaybeMessage<::com::woqutech::admin::MsgHeaderWrap>(Arena*);
template<> ::com::woqutech::admin::MsgMetrics* Arena::CreateMaybeMessage<::com::woqutech::admin::MsgMetrics>(Arena*);
template<> ::com::woqutech::admin::MsgResult* Arena::CreateMaybeMessage<::com::woqutech::admin::MsgResult>(Arena*);
template<> ::com::woqutech::admin::MsgVal* Arena::CreateMaybeMessage<::com::woqutech::admin::MsgVal>(Arena*);
template<> ::com::woqutech::admin::PairIntDbl* Arena::CreateMaybeMessage<::com::woqutech::admin::PairIntDbl>(Arena*);
template<> ::com::woqutech::admin::PairStrDbl* Arena::CreateMaybeMessage<::com::woqutech::admin::PairStrDbl>(Arena*);
template<> ::com::woqutech::admin::PairStrStr* Arena::CreateMaybeMessage<::com::woqutech::admin::PairStrStr>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {
namespace woqutech {
namespace admin {

enum MsgType {
  Result = 0,
  Command = 1,
  Metrics = 2,
  MsgType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MsgType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MsgType_IsValid(int value);
const MsgType MsgType_MIN = Result;
const MsgType MsgType_MAX = Metrics;
const int MsgType_ARRAYSIZE = MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgType_descriptor();
inline const ::std::string& MsgType_Name(MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgType_descriptor(), value);
}
inline bool MsgType_Parse(
    const ::std::string& name, MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgType>(
    MsgType_descriptor(), name, value);
}
// ===================================================================

class MsgHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.woqutech.admin.MsgHeader) */ {
 public:
  MsgHeader();
  virtual ~MsgHeader();

  MsgHeader(const MsgHeader& from);

  inline MsgHeader& operator=(const MsgHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgHeader(MsgHeader&& from) noexcept
    : MsgHeader() {
    *this = ::std::move(from);
  }

  inline MsgHeader& operator=(MsgHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgHeader* internal_default_instance() {
    return reinterpret_cast<const MsgHeader*>(
               &_MsgHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MsgHeader* other);
  friend void swap(MsgHeader& a, MsgHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgHeader* New() const final {
    return CreateMaybeMessage<MsgHeader>(NULL);
  }

  MsgHeader* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgHeader>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgHeader& from);
  void MergeFrom(const MsgHeader& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.woqutech.admin.MsgType msg_type = 1;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::com::woqutech::admin::MsgType msg_type() const;
  void set_msg_type(::com::woqutech::admin::MsgType value);

  // @@protoc_insertion_point(class_scope:com.woqutech.admin.MsgHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int msg_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AdminMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgHeaderWrap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.woqutech.admin.MsgHeaderWrap) */ {
 public:
  MsgHeaderWrap();
  virtual ~MsgHeaderWrap();

  MsgHeaderWrap(const MsgHeaderWrap& from);

  inline MsgHeaderWrap& operator=(const MsgHeaderWrap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgHeaderWrap(MsgHeaderWrap&& from) noexcept
    : MsgHeaderWrap() {
    *this = ::std::move(from);
  }

  inline MsgHeaderWrap& operator=(MsgHeaderWrap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHeaderWrap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgHeaderWrap* internal_default_instance() {
    return reinterpret_cast<const MsgHeaderWrap*>(
               &_MsgHeaderWrap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MsgHeaderWrap* other);
  friend void swap(MsgHeaderWrap& a, MsgHeaderWrap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgHeaderWrap* New() const final {
    return CreateMaybeMessage<MsgHeaderWrap>(NULL);
  }

  MsgHeaderWrap* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgHeaderWrap>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgHeaderWrap& from);
  void MergeFrom(const MsgHeaderWrap& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgHeaderWrap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.woqutech.admin.MsgHeader msg_header = 1;
  bool has_msg_header() const;
  void clear_msg_header();
  static const int kMsgHeaderFieldNumber = 1;
  private:
  const ::com::woqutech::admin::MsgHeader& _internal_msg_header() const;
  public:
  const ::com::woqutech::admin::MsgHeader& msg_header() const;
  ::com::woqutech::admin::MsgHeader* release_msg_header();
  ::com::woqutech::admin::MsgHeader* mutable_msg_header();
  void set_allocated_msg_header(::com::woqutech::admin::MsgHeader* msg_header);

  // @@protoc_insertion_point(class_scope:com.woqutech.admin.MsgHeaderWrap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::com::woqutech::admin::MsgHeader* msg_header_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AdminMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgVal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.woqutech.admin.MsgVal) */ {
 public:
  MsgVal();
  virtual ~MsgVal();

  MsgVal(const MsgVal& from);

  inline MsgVal& operator=(const MsgVal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgVal(MsgVal&& from) noexcept
    : MsgVal() {
    *this = ::std::move(from);
  }

  inline MsgVal& operator=(MsgVal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgVal& default_instance();

  enum MsgValCase {
    kI32Val = 1,
    kI64Val = 2,
    kF64Val = 3,
    kStrVal = 4,
    MSG_VAL_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgVal* internal_default_instance() {
    return reinterpret_cast<const MsgVal*>(
               &_MsgVal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MsgVal* other);
  friend void swap(MsgVal& a, MsgVal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgVal* New() const final {
    return CreateMaybeMessage<MsgVal>(NULL);
  }

  MsgVal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgVal>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgVal& from);
  void MergeFrom(const MsgVal& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgVal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 i32_val = 1;
  private:
  bool has_i32_val() const;
  public:
  void clear_i32_val();
  static const int kI32ValFieldNumber = 1;
  ::google::protobuf::int32 i32_val() const;
  void set_i32_val(::google::protobuf::int32 value);

  // int64 i64_val = 2;
  private:
  bool has_i64_val() const;
  public:
  void clear_i64_val();
  static const int kI64ValFieldNumber = 2;
  ::google::protobuf::int64 i64_val() const;
  void set_i64_val(::google::protobuf::int64 value);

  // double f64_val = 3;
  private:
  bool has_f64_val() const;
  public:
  void clear_f64_val();
  static const int kF64ValFieldNumber = 3;
  double f64_val() const;
  void set_f64_val(double value);

  // string str_val = 4;
  private:
  bool has_str_val() const;
  public:
  void clear_str_val();
  static const int kStrValFieldNumber = 4;
  const ::std::string& str_val() const;
  void set_str_val(const ::std::string& value);
  #if LANG_CXX11
  void set_str_val(::std::string&& value);
  #endif
  void set_str_val(const char* value);
  void set_str_val(const char* value, size_t size);
  ::std::string* mutable_str_val();
  ::std::string* release_str_val();
  void set_allocated_str_val(::std::string* str_val);

  void clear_msg_val();
  MsgValCase msg_val_case() const;
  // @@protoc_insertion_point(class_scope:com.woqutech.admin.MsgVal)
 private:
  void set_has_i32_val();
  void set_has_i64_val();
  void set_has_f64_val();
  void set_has_str_val();

  inline bool has_msg_val() const;
  inline void clear_has_msg_val();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union MsgValUnion {
    MsgValUnion() {}
    ::google::protobuf::int32 i32_val_;
    ::google::protobuf::int64 i64_val_;
    double f64_val_;
    ::google::protobuf::internal::ArenaStringPtr str_val_;
  } msg_val_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_AdminMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PairStrDbl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.woqutech.admin.PairStrDbl) */ {
 public:
  PairStrDbl();
  virtual ~PairStrDbl();

  PairStrDbl(const PairStrDbl& from);

  inline PairStrDbl& operator=(const PairStrDbl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PairStrDbl(PairStrDbl&& from) noexcept
    : PairStrDbl() {
    *this = ::std::move(from);
  }

  inline PairStrDbl& operator=(PairStrDbl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PairStrDbl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PairStrDbl* internal_default_instance() {
    return reinterpret_cast<const PairStrDbl*>(
               &_PairStrDbl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PairStrDbl* other);
  friend void swap(PairStrDbl& a, PairStrDbl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PairStrDbl* New() const final {
    return CreateMaybeMessage<PairStrDbl>(NULL);
  }

  PairStrDbl* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PairStrDbl>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PairStrDbl& from);
  void MergeFrom(const PairStrDbl& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PairStrDbl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // double val = 2;
  void clear_val();
  static const int kValFieldNumber = 2;
  double val() const;
  void set_val(double value);

  // @@protoc_insertion_point(class_scope:com.woqutech.admin.PairStrDbl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  double val_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AdminMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PairIntDbl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.woqutech.admin.PairIntDbl) */ {
 public:
  PairIntDbl();
  virtual ~PairIntDbl();

  PairIntDbl(const PairIntDbl& from);

  inline PairIntDbl& operator=(const PairIntDbl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PairIntDbl(PairIntDbl&& from) noexcept
    : PairIntDbl() {
    *this = ::std::move(from);
  }

  inline PairIntDbl& operator=(PairIntDbl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PairIntDbl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PairIntDbl* internal_default_instance() {
    return reinterpret_cast<const PairIntDbl*>(
               &_PairIntDbl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(PairIntDbl* other);
  friend void swap(PairIntDbl& a, PairIntDbl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PairIntDbl* New() const final {
    return CreateMaybeMessage<PairIntDbl>(NULL);
  }

  PairIntDbl* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PairIntDbl>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PairIntDbl& from);
  void MergeFrom(const PairIntDbl& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PairIntDbl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int64 key() const;
  void set_key(::google::protobuf::int64 value);

  // double val = 2;
  void clear_val();
  static const int kValFieldNumber = 2;
  double val() const;
  void set_val(double value);

  // @@protoc_insertion_point(class_scope:com.woqutech.admin.PairIntDbl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 key_;
  double val_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AdminMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PairStrStr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.woqutech.admin.PairStrStr) */ {
 public:
  PairStrStr();
  virtual ~PairStrStr();

  PairStrStr(const PairStrStr& from);

  inline PairStrStr& operator=(const PairStrStr& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PairStrStr(PairStrStr&& from) noexcept
    : PairStrStr() {
    *this = ::std::move(from);
  }

  inline PairStrStr& operator=(PairStrStr&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PairStrStr& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PairStrStr* internal_default_instance() {
    return reinterpret_cast<const PairStrStr*>(
               &_PairStrStr_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(PairStrStr* other);
  friend void swap(PairStrStr& a, PairStrStr& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PairStrStr* New() const final {
    return CreateMaybeMessage<PairStrStr>(NULL);
  }

  PairStrStr* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PairStrStr>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PairStrStr& from);
  void MergeFrom(const PairStrStr& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PairStrStr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string val = 2;
  void clear_val();
  static const int kValFieldNumber = 2;
  const ::std::string& val() const;
  void set_val(const ::std::string& value);
  #if LANG_CXX11
  void set_val(::std::string&& value);
  #endif
  void set_val(const char* value);
  void set_val(const char* value, size_t size);
  ::std::string* mutable_val();
  ::std::string* release_val();
  void set_allocated_val(::std::string* val);

  // @@protoc_insertion_point(class_scope:com.woqutech.admin.PairStrStr)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr val_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AdminMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.woqutech.admin.MsgResult) */ {
 public:
  MsgResult();
  virtual ~MsgResult();

  MsgResult(const MsgResult& from);

  inline MsgResult& operator=(const MsgResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgResult(MsgResult&& from) noexcept
    : MsgResult() {
    *this = ::std::move(from);
  }

  inline MsgResult& operator=(MsgResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgResult* internal_default_instance() {
    return reinterpret_cast<const MsgResult*>(
               &_MsgResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(MsgResult* other);
  friend void swap(MsgResult& a, MsgResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgResult* New() const final {
    return CreateMaybeMessage<MsgResult>(NULL);
  }

  MsgResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgResult& from);
  void MergeFrom(const MsgResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.woqutech.admin.PairStrStr rt_pairs = 4;
  int rt_pairs_size() const;
  void clear_rt_pairs();
  static const int kRtPairsFieldNumber = 4;
  ::com::woqutech::admin::PairStrStr* mutable_rt_pairs(int index);
  ::google::protobuf::RepeatedPtrField< ::com::woqutech::admin::PairStrStr >*
      mutable_rt_pairs();
  const ::com::woqutech::admin::PairStrStr& rt_pairs(int index) const;
  ::com::woqutech::admin::PairStrStr* add_rt_pairs();
  const ::google::protobuf::RepeatedPtrField< ::com::woqutech::admin::PairStrStr >&
      rt_pairs() const;

  // string rc = 2;
  void clear_rc();
  static const int kRcFieldNumber = 2;
  const ::std::string& rc() const;
  void set_rc(const ::std::string& value);
  #if LANG_CXX11
  void set_rc(::std::string&& value);
  #endif
  void set_rc(const char* value);
  void set_rc(const char* value, size_t size);
  ::std::string* mutable_rc();
  ::std::string* release_rc();
  void set_allocated_rc(::std::string* rc);

  // string msg = 3;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // .com.woqutech.admin.MsgHeader msg_header = 1;
  bool has_msg_header() const;
  void clear_msg_header();
  static const int kMsgHeaderFieldNumber = 1;
  private:
  const ::com::woqutech::admin::MsgHeader& _internal_msg_header() const;
  public:
  const ::com::woqutech::admin::MsgHeader& msg_header() const;
  ::com::woqutech::admin::MsgHeader* release_msg_header();
  ::com::woqutech::admin::MsgHeader* mutable_msg_header();
  void set_allocated_msg_header(::com::woqutech::admin::MsgHeader* msg_header);

  // @@protoc_insertion_point(class_scope:com.woqutech.admin.MsgResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::woqutech::admin::PairStrStr > rt_pairs_;
  ::google::protobuf::internal::ArenaStringPtr rc_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::com::woqutech::admin::MsgHeader* msg_header_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AdminMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.woqutech.admin.MsgCmd) */ {
 public:
  MsgCmd();
  virtual ~MsgCmd();

  MsgCmd(const MsgCmd& from);

  inline MsgCmd& operator=(const MsgCmd& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgCmd(MsgCmd&& from) noexcept
    : MsgCmd() {
    *this = ::std::move(from);
  }

  inline MsgCmd& operator=(MsgCmd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCmd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgCmd* internal_default_instance() {
    return reinterpret_cast<const MsgCmd*>(
               &_MsgCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(MsgCmd* other);
  friend void swap(MsgCmd& a, MsgCmd& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgCmd* New() const final {
    return CreateMaybeMessage<MsgCmd>(NULL);
  }

  MsgCmd* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgCmd>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgCmd& from);
  void MergeFrom(const MsgCmd& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.woqutech.admin.PairStrStr params = 3;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 3;
  ::com::woqutech::admin::PairStrStr* mutable_params(int index);
  ::google::protobuf::RepeatedPtrField< ::com::woqutech::admin::PairStrStr >*
      mutable_params();
  const ::com::woqutech::admin::PairStrStr& params(int index) const;
  ::com::woqutech::admin::PairStrStr* add_params();
  const ::google::protobuf::RepeatedPtrField< ::com::woqutech::admin::PairStrStr >&
      params() const;

  // string cmd = 2;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  const ::std::string& cmd() const;
  void set_cmd(const ::std::string& value);
  #if LANG_CXX11
  void set_cmd(::std::string&& value);
  #endif
  void set_cmd(const char* value);
  void set_cmd(const char* value, size_t size);
  ::std::string* mutable_cmd();
  ::std::string* release_cmd();
  void set_allocated_cmd(::std::string* cmd);

  // .com.woqutech.admin.MsgHeader msg_header = 1;
  bool has_msg_header() const;
  void clear_msg_header();
  static const int kMsgHeaderFieldNumber = 1;
  private:
  const ::com::woqutech::admin::MsgHeader& _internal_msg_header() const;
  public:
  const ::com::woqutech::admin::MsgHeader& msg_header() const;
  ::com::woqutech::admin::MsgHeader* release_msg_header();
  ::com::woqutech::admin::MsgHeader* mutable_msg_header();
  void set_allocated_msg_header(::com::woqutech::admin::MsgHeader* msg_header);

  // @@protoc_insertion_point(class_scope:com.woqutech.admin.MsgCmd)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::woqutech::admin::PairStrStr > params_;
  ::google::protobuf::internal::ArenaStringPtr cmd_;
  ::com::woqutech::admin::MsgHeader* msg_header_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AdminMsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgMetrics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.woqutech.admin.MsgMetrics) */ {
 public:
  MsgMetrics();
  virtual ~MsgMetrics();

  MsgMetrics(const MsgMetrics& from);

  inline MsgMetrics& operator=(const MsgMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgMetrics(MsgMetrics&& from) noexcept
    : MsgMetrics() {
    *this = ::std::move(from);
  }

  inline MsgMetrics& operator=(MsgMetrics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMetrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgMetrics* internal_default_instance() {
    return reinterpret_cast<const MsgMetrics*>(
               &_MsgMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(MsgMetrics* other);
  friend void swap(MsgMetrics& a, MsgMetrics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgMetrics* New() const final {
    return CreateMaybeMessage<MsgMetrics>(NULL);
  }

  MsgMetrics* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgMetrics>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgMetrics& from);
  void MergeFrom(const MsgMetrics& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgMetrics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.woqutech.admin.PairIntDbl trans_begin_proc = 3;
  int trans_begin_proc_size() const;
  void clear_trans_begin_proc();
  static const int kTransBeginProcFieldNumber = 3;
  ::com::woqutech::admin::PairIntDbl* mutable_trans_begin_proc(int index);
  ::google::protobuf::RepeatedPtrField< ::com::woqutech::admin::PairIntDbl >*
      mutable_trans_begin_proc();
  const ::com::woqutech::admin::PairIntDbl& trans_begin_proc(int index) const;
  ::com::woqutech::admin::PairIntDbl* add_trans_begin_proc();
  const ::google::protobuf::RepeatedPtrField< ::com::woqutech::admin::PairIntDbl >&
      trans_begin_proc() const;

  // .com.woqutech.admin.MsgHeader msg_header = 1;
  bool has_msg_header() const;
  void clear_msg_header();
  static const int kMsgHeaderFieldNumber = 1;
  private:
  const ::com::woqutech::admin::MsgHeader& _internal_msg_header() const;
  public:
  const ::com::woqutech::admin::MsgHeader& msg_header() const;
  ::com::woqutech::admin::MsgHeader* release_msg_header();
  ::com::woqutech::admin::MsgHeader* mutable_msg_header();
  void set_allocated_msg_header(::com::woqutech::admin::MsgHeader* msg_header);

  // double trans_commit_total = 2;
  void clear_trans_commit_total();
  static const int kTransCommitTotalFieldNumber = 2;
  double trans_commit_total() const;
  void set_trans_commit_total(double value);

  // @@protoc_insertion_point(class_scope:com.woqutech.admin.MsgMetrics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::com::woqutech::admin::PairIntDbl > trans_begin_proc_;
  ::com::woqutech::admin::MsgHeader* msg_header_;
  double trans_commit_total_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AdminMsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgHeader

// .com.woqutech.admin.MsgType msg_type = 1;
inline void MsgHeader::clear_msg_type() {
  msg_type_ = 0;
}
inline ::com::woqutech::admin::MsgType MsgHeader::msg_type() const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.MsgHeader.msg_type)
  return static_cast< ::com::woqutech::admin::MsgType >(msg_type_);
}
inline void MsgHeader::set_msg_type(::com::woqutech::admin::MsgType value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:com.woqutech.admin.MsgHeader.msg_type)
}

// -------------------------------------------------------------------

// MsgHeaderWrap

// .com.woqutech.admin.MsgHeader msg_header = 1;
inline bool MsgHeaderWrap::has_msg_header() const {
  return this != internal_default_instance() && msg_header_ != NULL;
}
inline void MsgHeaderWrap::clear_msg_header() {
  if (GetArenaNoVirtual() == NULL && msg_header_ != NULL) {
    delete msg_header_;
  }
  msg_header_ = NULL;
}
inline const ::com::woqutech::admin::MsgHeader& MsgHeaderWrap::_internal_msg_header() const {
  return *msg_header_;
}
inline const ::com::woqutech::admin::MsgHeader& MsgHeaderWrap::msg_header() const {
  const ::com::woqutech::admin::MsgHeader* p = msg_header_;
  // @@protoc_insertion_point(field_get:com.woqutech.admin.MsgHeaderWrap.msg_header)
  return p != NULL ? *p : *reinterpret_cast<const ::com::woqutech::admin::MsgHeader*>(
      &::com::woqutech::admin::_MsgHeader_default_instance_);
}
inline ::com::woqutech::admin::MsgHeader* MsgHeaderWrap::release_msg_header() {
  // @@protoc_insertion_point(field_release:com.woqutech.admin.MsgHeaderWrap.msg_header)
  
  ::com::woqutech::admin::MsgHeader* temp = msg_header_;
  msg_header_ = NULL;
  return temp;
}
inline ::com::woqutech::admin::MsgHeader* MsgHeaderWrap::mutable_msg_header() {
  
  if (msg_header_ == NULL) {
    auto* p = CreateMaybeMessage<::com::woqutech::admin::MsgHeader>(GetArenaNoVirtual());
    msg_header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.woqutech.admin.MsgHeaderWrap.msg_header)
  return msg_header_;
}
inline void MsgHeaderWrap::set_allocated_msg_header(::com::woqutech::admin::MsgHeader* msg_header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete msg_header_;
  }
  if (msg_header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg_header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg_header, submessage_arena);
    }
    
  } else {
    
  }
  msg_header_ = msg_header;
  // @@protoc_insertion_point(field_set_allocated:com.woqutech.admin.MsgHeaderWrap.msg_header)
}

// -------------------------------------------------------------------

// MsgVal

// int32 i32_val = 1;
inline bool MsgVal::has_i32_val() const {
  return msg_val_case() == kI32Val;
}
inline void MsgVal::set_has_i32_val() {
  _oneof_case_[0] = kI32Val;
}
inline void MsgVal::clear_i32_val() {
  if (has_i32_val()) {
    msg_val_.i32_val_ = 0;
    clear_has_msg_val();
  }
}
inline ::google::protobuf::int32 MsgVal::i32_val() const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.MsgVal.i32_val)
  if (has_i32_val()) {
    return msg_val_.i32_val_;
  }
  return 0;
}
inline void MsgVal::set_i32_val(::google::protobuf::int32 value) {
  if (!has_i32_val()) {
    clear_msg_val();
    set_has_i32_val();
  }
  msg_val_.i32_val_ = value;
  // @@protoc_insertion_point(field_set:com.woqutech.admin.MsgVal.i32_val)
}

// int64 i64_val = 2;
inline bool MsgVal::has_i64_val() const {
  return msg_val_case() == kI64Val;
}
inline void MsgVal::set_has_i64_val() {
  _oneof_case_[0] = kI64Val;
}
inline void MsgVal::clear_i64_val() {
  if (has_i64_val()) {
    msg_val_.i64_val_ = GOOGLE_LONGLONG(0);
    clear_has_msg_val();
  }
}
inline ::google::protobuf::int64 MsgVal::i64_val() const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.MsgVal.i64_val)
  if (has_i64_val()) {
    return msg_val_.i64_val_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void MsgVal::set_i64_val(::google::protobuf::int64 value) {
  if (!has_i64_val()) {
    clear_msg_val();
    set_has_i64_val();
  }
  msg_val_.i64_val_ = value;
  // @@protoc_insertion_point(field_set:com.woqutech.admin.MsgVal.i64_val)
}

// double f64_val = 3;
inline bool MsgVal::has_f64_val() const {
  return msg_val_case() == kF64Val;
}
inline void MsgVal::set_has_f64_val() {
  _oneof_case_[0] = kF64Val;
}
inline void MsgVal::clear_f64_val() {
  if (has_f64_val()) {
    msg_val_.f64_val_ = 0;
    clear_has_msg_val();
  }
}
inline double MsgVal::f64_val() const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.MsgVal.f64_val)
  if (has_f64_val()) {
    return msg_val_.f64_val_;
  }
  return 0;
}
inline void MsgVal::set_f64_val(double value) {
  if (!has_f64_val()) {
    clear_msg_val();
    set_has_f64_val();
  }
  msg_val_.f64_val_ = value;
  // @@protoc_insertion_point(field_set:com.woqutech.admin.MsgVal.f64_val)
}

// string str_val = 4;
inline bool MsgVal::has_str_val() const {
  return msg_val_case() == kStrVal;
}
inline void MsgVal::set_has_str_val() {
  _oneof_case_[0] = kStrVal;
}
inline void MsgVal::clear_str_val() {
  if (has_str_val()) {
    msg_val_.str_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_msg_val();
  }
}
inline const ::std::string& MsgVal::str_val() const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.MsgVal.str_val)
  if (has_str_val()) {
    return msg_val_.str_val_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void MsgVal::set_str_val(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.woqutech.admin.MsgVal.str_val)
  if (!has_str_val()) {
    clear_msg_val();
    set_has_str_val();
    msg_val_.str_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  msg_val_.str_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.woqutech.admin.MsgVal.str_val)
}
#if LANG_CXX11
inline void MsgVal::set_str_val(::std::string&& value) {
  // @@protoc_insertion_point(field_set:com.woqutech.admin.MsgVal.str_val)
  if (!has_str_val()) {
    clear_msg_val();
    set_has_str_val();
    msg_val_.str_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  msg_val_.str_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.woqutech.admin.MsgVal.str_val)
}
#endif
inline void MsgVal::set_str_val(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_str_val()) {
    clear_msg_val();
    set_has_str_val();
    msg_val_.str_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  msg_val_.str_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.woqutech.admin.MsgVal.str_val)
}
inline void MsgVal::set_str_val(const char* value, size_t size) {
  if (!has_str_val()) {
    clear_msg_val();
    set_has_str_val();
    msg_val_.str_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  msg_val_.str_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.woqutech.admin.MsgVal.str_val)
}
inline ::std::string* MsgVal::mutable_str_val() {
  if (!has_str_val()) {
    clear_msg_val();
    set_has_str_val();
    msg_val_.str_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:com.woqutech.admin.MsgVal.str_val)
  return msg_val_.str_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgVal::release_str_val() {
  // @@protoc_insertion_point(field_release:com.woqutech.admin.MsgVal.str_val)
  if (has_str_val()) {
    clear_has_msg_val();
    return msg_val_.str_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void MsgVal::set_allocated_str_val(::std::string* str_val) {
  if (!has_str_val()) {
    msg_val_.str_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_msg_val();
  if (str_val != NULL) {
    set_has_str_val();
    msg_val_.str_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str_val);
  }
  // @@protoc_insertion_point(field_set_allocated:com.woqutech.admin.MsgVal.str_val)
}

inline bool MsgVal::has_msg_val() const {
  return msg_val_case() != MSG_VAL_NOT_SET;
}
inline void MsgVal::clear_has_msg_val() {
  _oneof_case_[0] = MSG_VAL_NOT_SET;
}
inline MsgVal::MsgValCase MsgVal::msg_val_case() const {
  return MsgVal::MsgValCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PairStrDbl

// string key = 1;
inline void PairStrDbl::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PairStrDbl::key() const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.PairStrDbl.key)
  return key_.GetNoArena();
}
inline void PairStrDbl::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.woqutech.admin.PairStrDbl.key)
}
#if LANG_CXX11
inline void PairStrDbl::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.woqutech.admin.PairStrDbl.key)
}
#endif
inline void PairStrDbl::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.woqutech.admin.PairStrDbl.key)
}
inline void PairStrDbl::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.woqutech.admin.PairStrDbl.key)
}
inline ::std::string* PairStrDbl::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:com.woqutech.admin.PairStrDbl.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PairStrDbl::release_key() {
  // @@protoc_insertion_point(field_release:com.woqutech.admin.PairStrDbl.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PairStrDbl::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:com.woqutech.admin.PairStrDbl.key)
}

// double val = 2;
inline void PairStrDbl::clear_val() {
  val_ = 0;
}
inline double PairStrDbl::val() const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.PairStrDbl.val)
  return val_;
}
inline void PairStrDbl::set_val(double value) {
  
  val_ = value;
  // @@protoc_insertion_point(field_set:com.woqutech.admin.PairStrDbl.val)
}

// -------------------------------------------------------------------

// PairIntDbl

// int64 key = 1;
inline void PairIntDbl::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PairIntDbl::key() const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.PairIntDbl.key)
  return key_;
}
inline void PairIntDbl::set_key(::google::protobuf::int64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:com.woqutech.admin.PairIntDbl.key)
}

// double val = 2;
inline void PairIntDbl::clear_val() {
  val_ = 0;
}
inline double PairIntDbl::val() const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.PairIntDbl.val)
  return val_;
}
inline void PairIntDbl::set_val(double value) {
  
  val_ = value;
  // @@protoc_insertion_point(field_set:com.woqutech.admin.PairIntDbl.val)
}

// -------------------------------------------------------------------

// PairStrStr

// string key = 1;
inline void PairStrStr::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PairStrStr::key() const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.PairStrStr.key)
  return key_.GetNoArena();
}
inline void PairStrStr::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.woqutech.admin.PairStrStr.key)
}
#if LANG_CXX11
inline void PairStrStr::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.woqutech.admin.PairStrStr.key)
}
#endif
inline void PairStrStr::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.woqutech.admin.PairStrStr.key)
}
inline void PairStrStr::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.woqutech.admin.PairStrStr.key)
}
inline ::std::string* PairStrStr::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:com.woqutech.admin.PairStrStr.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PairStrStr::release_key() {
  // @@protoc_insertion_point(field_release:com.woqutech.admin.PairStrStr.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PairStrStr::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:com.woqutech.admin.PairStrStr.key)
}

// string val = 2;
inline void PairStrStr::clear_val() {
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PairStrStr::val() const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.PairStrStr.val)
  return val_.GetNoArena();
}
inline void PairStrStr::set_val(const ::std::string& value) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.woqutech.admin.PairStrStr.val)
}
#if LANG_CXX11
inline void PairStrStr::set_val(::std::string&& value) {
  
  val_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.woqutech.admin.PairStrStr.val)
}
#endif
inline void PairStrStr::set_val(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.woqutech.admin.PairStrStr.val)
}
inline void PairStrStr::set_val(const char* value, size_t size) {
  
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.woqutech.admin.PairStrStr.val)
}
inline ::std::string* PairStrStr::mutable_val() {
  
  // @@protoc_insertion_point(field_mutable:com.woqutech.admin.PairStrStr.val)
  return val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PairStrStr::release_val() {
  // @@protoc_insertion_point(field_release:com.woqutech.admin.PairStrStr.val)
  
  return val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PairStrStr::set_allocated_val(::std::string* val) {
  if (val != NULL) {
    
  } else {
    
  }
  val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val);
  // @@protoc_insertion_point(field_set_allocated:com.woqutech.admin.PairStrStr.val)
}

// -------------------------------------------------------------------

// MsgResult

// .com.woqutech.admin.MsgHeader msg_header = 1;
inline bool MsgResult::has_msg_header() const {
  return this != internal_default_instance() && msg_header_ != NULL;
}
inline void MsgResult::clear_msg_header() {
  if (GetArenaNoVirtual() == NULL && msg_header_ != NULL) {
    delete msg_header_;
  }
  msg_header_ = NULL;
}
inline const ::com::woqutech::admin::MsgHeader& MsgResult::_internal_msg_header() const {
  return *msg_header_;
}
inline const ::com::woqutech::admin::MsgHeader& MsgResult::msg_header() const {
  const ::com::woqutech::admin::MsgHeader* p = msg_header_;
  // @@protoc_insertion_point(field_get:com.woqutech.admin.MsgResult.msg_header)
  return p != NULL ? *p : *reinterpret_cast<const ::com::woqutech::admin::MsgHeader*>(
      &::com::woqutech::admin::_MsgHeader_default_instance_);
}
inline ::com::woqutech::admin::MsgHeader* MsgResult::release_msg_header() {
  // @@protoc_insertion_point(field_release:com.woqutech.admin.MsgResult.msg_header)
  
  ::com::woqutech::admin::MsgHeader* temp = msg_header_;
  msg_header_ = NULL;
  return temp;
}
inline ::com::woqutech::admin::MsgHeader* MsgResult::mutable_msg_header() {
  
  if (msg_header_ == NULL) {
    auto* p = CreateMaybeMessage<::com::woqutech::admin::MsgHeader>(GetArenaNoVirtual());
    msg_header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.woqutech.admin.MsgResult.msg_header)
  return msg_header_;
}
inline void MsgResult::set_allocated_msg_header(::com::woqutech::admin::MsgHeader* msg_header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete msg_header_;
  }
  if (msg_header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg_header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg_header, submessage_arena);
    }
    
  } else {
    
  }
  msg_header_ = msg_header;
  // @@protoc_insertion_point(field_set_allocated:com.woqutech.admin.MsgResult.msg_header)
}

// string rc = 2;
inline void MsgResult::clear_rc() {
  rc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgResult::rc() const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.MsgResult.rc)
  return rc_.GetNoArena();
}
inline void MsgResult::set_rc(const ::std::string& value) {
  
  rc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.woqutech.admin.MsgResult.rc)
}
#if LANG_CXX11
inline void MsgResult::set_rc(::std::string&& value) {
  
  rc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.woqutech.admin.MsgResult.rc)
}
#endif
inline void MsgResult::set_rc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.woqutech.admin.MsgResult.rc)
}
inline void MsgResult::set_rc(const char* value, size_t size) {
  
  rc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.woqutech.admin.MsgResult.rc)
}
inline ::std::string* MsgResult::mutable_rc() {
  
  // @@protoc_insertion_point(field_mutable:com.woqutech.admin.MsgResult.rc)
  return rc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgResult::release_rc() {
  // @@protoc_insertion_point(field_release:com.woqutech.admin.MsgResult.rc)
  
  return rc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgResult::set_allocated_rc(::std::string* rc) {
  if (rc != NULL) {
    
  } else {
    
  }
  rc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rc);
  // @@protoc_insertion_point(field_set_allocated:com.woqutech.admin.MsgResult.rc)
}

// string msg = 3;
inline void MsgResult::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgResult::msg() const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.MsgResult.msg)
  return msg_.GetNoArena();
}
inline void MsgResult::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.woqutech.admin.MsgResult.msg)
}
#if LANG_CXX11
inline void MsgResult::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.woqutech.admin.MsgResult.msg)
}
#endif
inline void MsgResult::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.woqutech.admin.MsgResult.msg)
}
inline void MsgResult::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.woqutech.admin.MsgResult.msg)
}
inline ::std::string* MsgResult::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:com.woqutech.admin.MsgResult.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgResult::release_msg() {
  // @@protoc_insertion_point(field_release:com.woqutech.admin.MsgResult.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgResult::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:com.woqutech.admin.MsgResult.msg)
}

// repeated .com.woqutech.admin.PairStrStr rt_pairs = 4;
inline int MsgResult::rt_pairs_size() const {
  return rt_pairs_.size();
}
inline void MsgResult::clear_rt_pairs() {
  rt_pairs_.Clear();
}
inline ::com::woqutech::admin::PairStrStr* MsgResult::mutable_rt_pairs(int index) {
  // @@protoc_insertion_point(field_mutable:com.woqutech.admin.MsgResult.rt_pairs)
  return rt_pairs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::woqutech::admin::PairStrStr >*
MsgResult::mutable_rt_pairs() {
  // @@protoc_insertion_point(field_mutable_list:com.woqutech.admin.MsgResult.rt_pairs)
  return &rt_pairs_;
}
inline const ::com::woqutech::admin::PairStrStr& MsgResult::rt_pairs(int index) const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.MsgResult.rt_pairs)
  return rt_pairs_.Get(index);
}
inline ::com::woqutech::admin::PairStrStr* MsgResult::add_rt_pairs() {
  // @@protoc_insertion_point(field_add:com.woqutech.admin.MsgResult.rt_pairs)
  return rt_pairs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::woqutech::admin::PairStrStr >&
MsgResult::rt_pairs() const {
  // @@protoc_insertion_point(field_list:com.woqutech.admin.MsgResult.rt_pairs)
  return rt_pairs_;
}

// -------------------------------------------------------------------

// MsgCmd

// .com.woqutech.admin.MsgHeader msg_header = 1;
inline bool MsgCmd::has_msg_header() const {
  return this != internal_default_instance() && msg_header_ != NULL;
}
inline void MsgCmd::clear_msg_header() {
  if (GetArenaNoVirtual() == NULL && msg_header_ != NULL) {
    delete msg_header_;
  }
  msg_header_ = NULL;
}
inline const ::com::woqutech::admin::MsgHeader& MsgCmd::_internal_msg_header() const {
  return *msg_header_;
}
inline const ::com::woqutech::admin::MsgHeader& MsgCmd::msg_header() const {
  const ::com::woqutech::admin::MsgHeader* p = msg_header_;
  // @@protoc_insertion_point(field_get:com.woqutech.admin.MsgCmd.msg_header)
  return p != NULL ? *p : *reinterpret_cast<const ::com::woqutech::admin::MsgHeader*>(
      &::com::woqutech::admin::_MsgHeader_default_instance_);
}
inline ::com::woqutech::admin::MsgHeader* MsgCmd::release_msg_header() {
  // @@protoc_insertion_point(field_release:com.woqutech.admin.MsgCmd.msg_header)
  
  ::com::woqutech::admin::MsgHeader* temp = msg_header_;
  msg_header_ = NULL;
  return temp;
}
inline ::com::woqutech::admin::MsgHeader* MsgCmd::mutable_msg_header() {
  
  if (msg_header_ == NULL) {
    auto* p = CreateMaybeMessage<::com::woqutech::admin::MsgHeader>(GetArenaNoVirtual());
    msg_header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.woqutech.admin.MsgCmd.msg_header)
  return msg_header_;
}
inline void MsgCmd::set_allocated_msg_header(::com::woqutech::admin::MsgHeader* msg_header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete msg_header_;
  }
  if (msg_header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg_header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg_header, submessage_arena);
    }
    
  } else {
    
  }
  msg_header_ = msg_header;
  // @@protoc_insertion_point(field_set_allocated:com.woqutech.admin.MsgCmd.msg_header)
}

// string cmd = 2;
inline void MsgCmd::clear_cmd() {
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCmd::cmd() const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.MsgCmd.cmd)
  return cmd_.GetNoArena();
}
inline void MsgCmd::set_cmd(const ::std::string& value) {
  
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.woqutech.admin.MsgCmd.cmd)
}
#if LANG_CXX11
inline void MsgCmd::set_cmd(::std::string&& value) {
  
  cmd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.woqutech.admin.MsgCmd.cmd)
}
#endif
inline void MsgCmd::set_cmd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.woqutech.admin.MsgCmd.cmd)
}
inline void MsgCmd::set_cmd(const char* value, size_t size) {
  
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.woqutech.admin.MsgCmd.cmd)
}
inline ::std::string* MsgCmd::mutable_cmd() {
  
  // @@protoc_insertion_point(field_mutable:com.woqutech.admin.MsgCmd.cmd)
  return cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCmd::release_cmd() {
  // @@protoc_insertion_point(field_release:com.woqutech.admin.MsgCmd.cmd)
  
  return cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCmd::set_allocated_cmd(::std::string* cmd) {
  if (cmd != NULL) {
    
  } else {
    
  }
  cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd);
  // @@protoc_insertion_point(field_set_allocated:com.woqutech.admin.MsgCmd.cmd)
}

// repeated .com.woqutech.admin.PairStrStr params = 3;
inline int MsgCmd::params_size() const {
  return params_.size();
}
inline void MsgCmd::clear_params() {
  params_.Clear();
}
inline ::com::woqutech::admin::PairStrStr* MsgCmd::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:com.woqutech.admin.MsgCmd.params)
  return params_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::woqutech::admin::PairStrStr >*
MsgCmd::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:com.woqutech.admin.MsgCmd.params)
  return &params_;
}
inline const ::com::woqutech::admin::PairStrStr& MsgCmd::params(int index) const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.MsgCmd.params)
  return params_.Get(index);
}
inline ::com::woqutech::admin::PairStrStr* MsgCmd::add_params() {
  // @@protoc_insertion_point(field_add:com.woqutech.admin.MsgCmd.params)
  return params_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::woqutech::admin::PairStrStr >&
MsgCmd::params() const {
  // @@protoc_insertion_point(field_list:com.woqutech.admin.MsgCmd.params)
  return params_;
}

// -------------------------------------------------------------------

// MsgMetrics

// .com.woqutech.admin.MsgHeader msg_header = 1;
inline bool MsgMetrics::has_msg_header() const {
  return this != internal_default_instance() && msg_header_ != NULL;
}
inline void MsgMetrics::clear_msg_header() {
  if (GetArenaNoVirtual() == NULL && msg_header_ != NULL) {
    delete msg_header_;
  }
  msg_header_ = NULL;
}
inline const ::com::woqutech::admin::MsgHeader& MsgMetrics::_internal_msg_header() const {
  return *msg_header_;
}
inline const ::com::woqutech::admin::MsgHeader& MsgMetrics::msg_header() const {
  const ::com::woqutech::admin::MsgHeader* p = msg_header_;
  // @@protoc_insertion_point(field_get:com.woqutech.admin.MsgMetrics.msg_header)
  return p != NULL ? *p : *reinterpret_cast<const ::com::woqutech::admin::MsgHeader*>(
      &::com::woqutech::admin::_MsgHeader_default_instance_);
}
inline ::com::woqutech::admin::MsgHeader* MsgMetrics::release_msg_header() {
  // @@protoc_insertion_point(field_release:com.woqutech.admin.MsgMetrics.msg_header)
  
  ::com::woqutech::admin::MsgHeader* temp = msg_header_;
  msg_header_ = NULL;
  return temp;
}
inline ::com::woqutech::admin::MsgHeader* MsgMetrics::mutable_msg_header() {
  
  if (msg_header_ == NULL) {
    auto* p = CreateMaybeMessage<::com::woqutech::admin::MsgHeader>(GetArenaNoVirtual());
    msg_header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.woqutech.admin.MsgMetrics.msg_header)
  return msg_header_;
}
inline void MsgMetrics::set_allocated_msg_header(::com::woqutech::admin::MsgHeader* msg_header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete msg_header_;
  }
  if (msg_header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg_header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg_header, submessage_arena);
    }
    
  } else {
    
  }
  msg_header_ = msg_header;
  // @@protoc_insertion_point(field_set_allocated:com.woqutech.admin.MsgMetrics.msg_header)
}

// double trans_commit_total = 2;
inline void MsgMetrics::clear_trans_commit_total() {
  trans_commit_total_ = 0;
}
inline double MsgMetrics::trans_commit_total() const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.MsgMetrics.trans_commit_total)
  return trans_commit_total_;
}
inline void MsgMetrics::set_trans_commit_total(double value) {
  
  trans_commit_total_ = value;
  // @@protoc_insertion_point(field_set:com.woqutech.admin.MsgMetrics.trans_commit_total)
}

// repeated .com.woqutech.admin.PairIntDbl trans_begin_proc = 3;
inline int MsgMetrics::trans_begin_proc_size() const {
  return trans_begin_proc_.size();
}
inline void MsgMetrics::clear_trans_begin_proc() {
  trans_begin_proc_.Clear();
}
inline ::com::woqutech::admin::PairIntDbl* MsgMetrics::mutable_trans_begin_proc(int index) {
  // @@protoc_insertion_point(field_mutable:com.woqutech.admin.MsgMetrics.trans_begin_proc)
  return trans_begin_proc_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::woqutech::admin::PairIntDbl >*
MsgMetrics::mutable_trans_begin_proc() {
  // @@protoc_insertion_point(field_mutable_list:com.woqutech.admin.MsgMetrics.trans_begin_proc)
  return &trans_begin_proc_;
}
inline const ::com::woqutech::admin::PairIntDbl& MsgMetrics::trans_begin_proc(int index) const {
  // @@protoc_insertion_point(field_get:com.woqutech.admin.MsgMetrics.trans_begin_proc)
  return trans_begin_proc_.Get(index);
}
inline ::com::woqutech::admin::PairIntDbl* MsgMetrics::add_trans_begin_proc() {
  // @@protoc_insertion_point(field_add:com.woqutech.admin.MsgMetrics.trans_begin_proc)
  return trans_begin_proc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::woqutech::admin::PairIntDbl >&
MsgMetrics::trans_begin_proc() const {
  // @@protoc_insertion_point(field_list:com.woqutech.admin.MsgMetrics.trans_begin_proc)
  return trans_begin_proc_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace admin
}  // namespace woqutech
}  // namespace com

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::woqutech::admin::MsgType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::woqutech::admin::MsgType>() {
  return ::com::woqutech::admin::MsgType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_AdminMsg_2eproto
