// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AdminMsg.proto

#include "AdminMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_AdminMsg_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AdminMsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MsgHeader;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AdminMsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PairIntDbl;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AdminMsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PairStrStr;
}  // namespace protobuf_AdminMsg_2eproto
namespace com {
namespace woqutech {
namespace admin {
class MsgHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgHeader>
      _instance;
} _MsgHeader_default_instance_;
class MsgHeaderWrapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgHeaderWrap>
      _instance;
} _MsgHeaderWrap_default_instance_;
class MsgValDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgVal>
      _instance;
  ::google::protobuf::int32 i32_val_;
  ::google::protobuf::int64 i64_val_;
  double f64_val_;
  ::google::protobuf::internal::ArenaStringPtr str_val_;
} _MsgVal_default_instance_;
class PairStrDblDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PairStrDbl>
      _instance;
} _PairStrDbl_default_instance_;
class PairIntDblDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PairIntDbl>
      _instance;
} _PairIntDbl_default_instance_;
class PairStrStrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PairStrStr>
      _instance;
} _PairStrStr_default_instance_;
class MsgResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgResult>
      _instance;
} _MsgResult_default_instance_;
class MsgCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgCmd>
      _instance;
} _MsgCmd_default_instance_;
class MsgMetricsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgMetrics>
      _instance;
} _MsgMetrics_default_instance_;
}  // namespace admin
}  // namespace woqutech
}  // namespace com
namespace protobuf_AdminMsg_2eproto {
static void InitDefaultsMsgHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::woqutech::admin::_MsgHeader_default_instance_;
    new (ptr) ::com::woqutech::admin::MsgHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::woqutech::admin::MsgHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgHeader}, {}};

static void InitDefaultsMsgHeaderWrap() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::woqutech::admin::_MsgHeaderWrap_default_instance_;
    new (ptr) ::com::woqutech::admin::MsgHeaderWrap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::woqutech::admin::MsgHeaderWrap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MsgHeaderWrap =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMsgHeaderWrap}, {
      &protobuf_AdminMsg_2eproto::scc_info_MsgHeader.base,}};

static void InitDefaultsMsgVal() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::woqutech::admin::_MsgVal_default_instance_;
    new (ptr) ::com::woqutech::admin::MsgVal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::woqutech::admin::MsgVal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgVal =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgVal}, {}};

static void InitDefaultsPairStrDbl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::woqutech::admin::_PairStrDbl_default_instance_;
    new (ptr) ::com::woqutech::admin::PairStrDbl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::woqutech::admin::PairStrDbl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PairStrDbl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPairStrDbl}, {}};

static void InitDefaultsPairIntDbl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::woqutech::admin::_PairIntDbl_default_instance_;
    new (ptr) ::com::woqutech::admin::PairIntDbl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::woqutech::admin::PairIntDbl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PairIntDbl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPairIntDbl}, {}};

static void InitDefaultsPairStrStr() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::woqutech::admin::_PairStrStr_default_instance_;
    new (ptr) ::com::woqutech::admin::PairStrStr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::woqutech::admin::PairStrStr::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PairStrStr =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPairStrStr}, {}};

static void InitDefaultsMsgResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::woqutech::admin::_MsgResult_default_instance_;
    new (ptr) ::com::woqutech::admin::MsgResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::woqutech::admin::MsgResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MsgResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMsgResult}, {
      &protobuf_AdminMsg_2eproto::scc_info_MsgHeader.base,
      &protobuf_AdminMsg_2eproto::scc_info_PairStrStr.base,}};

static void InitDefaultsMsgCmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::woqutech::admin::_MsgCmd_default_instance_;
    new (ptr) ::com::woqutech::admin::MsgCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::woqutech::admin::MsgCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MsgCmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMsgCmd}, {
      &protobuf_AdminMsg_2eproto::scc_info_MsgHeader.base,
      &protobuf_AdminMsg_2eproto::scc_info_PairStrStr.base,}};

static void InitDefaultsMsgMetrics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::woqutech::admin::_MsgMetrics_default_instance_;
    new (ptr) ::com::woqutech::admin::MsgMetrics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::woqutech::admin::MsgMetrics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MsgMetrics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMsgMetrics}, {
      &protobuf_AdminMsg_2eproto::scc_info_MsgHeader.base,
      &protobuf_AdminMsg_2eproto::scc_info_PairIntDbl.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MsgHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgHeaderWrap.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgVal.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PairStrDbl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PairIntDbl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PairStrStr.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgCmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgMetrics.base);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgHeader, msg_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgHeaderWrap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgHeaderWrap, msg_header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgVal, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgVal, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::com::woqutech::admin::MsgValDefaultTypeInternal, i32_val_),
  offsetof(::com::woqutech::admin::MsgValDefaultTypeInternal, i64_val_),
  offsetof(::com::woqutech::admin::MsgValDefaultTypeInternal, f64_val_),
  offsetof(::com::woqutech::admin::MsgValDefaultTypeInternal, str_val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgVal, msg_val_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::PairStrDbl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::PairStrDbl, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::PairStrDbl, val_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::PairIntDbl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::PairIntDbl, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::PairIntDbl, val_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::PairStrStr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::PairStrStr, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::PairStrStr, val_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgResult, msg_header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgResult, rc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgResult, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgResult, rt_pairs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgCmd, msg_header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgCmd, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgCmd, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgMetrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgMetrics, msg_header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgMetrics, trans_commit_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::woqutech::admin::MsgMetrics, trans_begin_proc_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::woqutech::admin::MsgHeader)},
  { 6, -1, sizeof(::com::woqutech::admin::MsgHeaderWrap)},
  { 12, -1, sizeof(::com::woqutech::admin::MsgVal)},
  { 22, -1, sizeof(::com::woqutech::admin::PairStrDbl)},
  { 29, -1, sizeof(::com::woqutech::admin::PairIntDbl)},
  { 36, -1, sizeof(::com::woqutech::admin::PairStrStr)},
  { 43, -1, sizeof(::com::woqutech::admin::MsgResult)},
  { 52, -1, sizeof(::com::woqutech::admin::MsgCmd)},
  { 60, -1, sizeof(::com::woqutech::admin::MsgMetrics)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::woqutech::admin::_MsgHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::woqutech::admin::_MsgHeaderWrap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::woqutech::admin::_MsgVal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::woqutech::admin::_PairStrDbl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::woqutech::admin::_PairIntDbl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::woqutech::admin::_PairStrStr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::woqutech::admin::_MsgResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::woqutech::admin::_MsgCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::woqutech::admin::_MsgMetrics_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "AdminMsg.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016AdminMsg.proto\022\022com.woqutech.admin\":\n\t"
      "MsgHeader\022-\n\010msg_type\030\001 \001(\0162\033.com.woqute"
      "ch.admin.MsgType\"B\n\rMsgHeaderWrap\0221\n\nmsg"
      "_header\030\001 \001(\0132\035.com.woqutech.admin.MsgHe"
      "ader\"_\n\006MsgVal\022\021\n\007i32_val\030\001 \001(\005H\000\022\021\n\007i64"
      "_val\030\002 \001(\003H\000\022\021\n\007f64_val\030\003 \001(\001H\000\022\021\n\007str_v"
      "al\030\004 \001(\tH\000B\t\n\007msg_val\"&\n\nPairStrDbl\022\013\n\003k"
      "ey\030\001 \001(\t\022\013\n\003val\030\002 \001(\001\"&\n\nPairIntDbl\022\013\n\003k"
      "ey\030\001 \001(\003\022\013\n\003val\030\002 \001(\001\"&\n\nPairStrStr\022\013\n\003k"
      "ey\030\001 \001(\t\022\013\n\003val\030\002 \001(\t\"\211\001\n\tMsgResult\0221\n\nm"
      "sg_header\030\001 \001(\0132\035.com.woqutech.admin.Msg"
      "Header\022\n\n\002rc\030\002 \001(\t\022\013\n\003msg\030\003 \001(\t\0220\n\010rt_pa"
      "irs\030\004 \003(\0132\036.com.woqutech.admin.PairStrSt"
      "r\"x\n\006MsgCmd\0221\n\nmsg_header\030\001 \001(\0132\035.com.wo"
      "qutech.admin.MsgHeader\022\013\n\003cmd\030\002 \001(\t\022.\n\006p"
      "arams\030\003 \003(\0132\036.com.woqutech.admin.PairStr"
      "Str\"\225\001\n\nMsgMetrics\0221\n\nmsg_header\030\001 \001(\0132\035"
      ".com.woqutech.admin.MsgHeader\022\032\n\022trans_c"
      "ommit_total\030\002 \001(\001\0228\n\020trans_begin_proc\030\003 "
      "\003(\0132\036.com.woqutech.admin.PairIntDbl*/\n\007M"
      "sgType\022\n\n\006Result\020\000\022\013\n\007Command\020\001\022\013\n\007Metri"
      "cs\020\002B\"\n\022com.woqutech.adminB\014AdminMessage"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 888);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AdminMsg.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_AdminMsg_2eproto
namespace com {
namespace woqutech {
namespace admin {
const ::google::protobuf::EnumDescriptor* MsgType_descriptor() {
  protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AdminMsg_2eproto::file_level_enum_descriptors[0];
}
bool MsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MsgHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgHeader::kMsgTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgHeader::MsgHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AdminMsg_2eproto::scc_info_MsgHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.woqutech.admin.MsgHeader)
}
MsgHeader::MsgHeader(const MsgHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_type_ = from.msg_type_;
  // @@protoc_insertion_point(copy_constructor:com.woqutech.admin.MsgHeader)
}

void MsgHeader::SharedCtor() {
  msg_type_ = 0;
}

MsgHeader::~MsgHeader() {
  // @@protoc_insertion_point(destructor:com.woqutech.admin.MsgHeader)
  SharedDtor();
}

void MsgHeader::SharedDtor() {
}

void MsgHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgHeader::descriptor() {
  ::protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgHeader& MsgHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AdminMsg_2eproto::scc_info_MsgHeader.base);
  return *internal_default_instance();
}


void MsgHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:com.woqutech.admin.MsgHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_type_ = 0;
  _internal_metadata_.Clear();
}

bool MsgHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.woqutech.admin.MsgHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.woqutech.admin.MsgType msg_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_type(static_cast< ::com::woqutech::admin::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.woqutech.admin.MsgHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.woqutech.admin.MsgHeader)
  return false;
#undef DO_
}

void MsgHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.woqutech.admin.MsgHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.woqutech.admin.MsgType msg_type = 1;
  if (this->msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msg_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.woqutech.admin.MsgHeader)
}

::google::protobuf::uint8* MsgHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.woqutech.admin.MsgHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.woqutech.admin.MsgType msg_type = 1;
  if (this->msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msg_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.woqutech.admin.MsgHeader)
  return target;
}

size_t MsgHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.woqutech.admin.MsgHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .com.woqutech.admin.MsgType msg_type = 1;
  if (this->msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.woqutech.admin.MsgHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.woqutech.admin.MsgHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.woqutech.admin.MsgHeader)
    MergeFrom(*source);
  }
}

void MsgHeader::MergeFrom(const MsgHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.woqutech.admin.MsgHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_type() != 0) {
    set_msg_type(from.msg_type());
  }
}

void MsgHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.woqutech.admin.MsgHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHeader::CopyFrom(const MsgHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.woqutech.admin.MsgHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHeader::IsInitialized() const {
  return true;
}

void MsgHeader::Swap(MsgHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgHeader::InternalSwap(MsgHeader* other) {
  using std::swap;
  swap(msg_type_, other->msg_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgHeader::GetMetadata() const {
  protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgHeaderWrap::InitAsDefaultInstance() {
  ::com::woqutech::admin::_MsgHeaderWrap_default_instance_._instance.get_mutable()->msg_header_ = const_cast< ::com::woqutech::admin::MsgHeader*>(
      ::com::woqutech::admin::MsgHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgHeaderWrap::kMsgHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgHeaderWrap::MsgHeaderWrap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AdminMsg_2eproto::scc_info_MsgHeaderWrap.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.woqutech.admin.MsgHeaderWrap)
}
MsgHeaderWrap::MsgHeaderWrap(const MsgHeaderWrap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg_header()) {
    msg_header_ = new ::com::woqutech::admin::MsgHeader(*from.msg_header_);
  } else {
    msg_header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:com.woqutech.admin.MsgHeaderWrap)
}

void MsgHeaderWrap::SharedCtor() {
  msg_header_ = NULL;
}

MsgHeaderWrap::~MsgHeaderWrap() {
  // @@protoc_insertion_point(destructor:com.woqutech.admin.MsgHeaderWrap)
  SharedDtor();
}

void MsgHeaderWrap::SharedDtor() {
  if (this != internal_default_instance()) delete msg_header_;
}

void MsgHeaderWrap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgHeaderWrap::descriptor() {
  ::protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgHeaderWrap& MsgHeaderWrap::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AdminMsg_2eproto::scc_info_MsgHeaderWrap.base);
  return *internal_default_instance();
}


void MsgHeaderWrap::Clear() {
// @@protoc_insertion_point(message_clear_start:com.woqutech.admin.MsgHeaderWrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && msg_header_ != NULL) {
    delete msg_header_;
  }
  msg_header_ = NULL;
  _internal_metadata_.Clear();
}

bool MsgHeaderWrap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.woqutech.admin.MsgHeaderWrap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.woqutech.admin.MsgHeader msg_header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.woqutech.admin.MsgHeaderWrap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.woqutech.admin.MsgHeaderWrap)
  return false;
#undef DO_
}

void MsgHeaderWrap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.woqutech.admin.MsgHeaderWrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.woqutech.admin.MsgHeader msg_header = 1;
  if (this->has_msg_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_msg_header(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.woqutech.admin.MsgHeaderWrap)
}

::google::protobuf::uint8* MsgHeaderWrap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.woqutech.admin.MsgHeaderWrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.woqutech.admin.MsgHeader msg_header = 1;
  if (this->has_msg_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_msg_header(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.woqutech.admin.MsgHeaderWrap)
  return target;
}

size_t MsgHeaderWrap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.woqutech.admin.MsgHeaderWrap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .com.woqutech.admin.MsgHeader msg_header = 1;
  if (this->has_msg_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msg_header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgHeaderWrap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.woqutech.admin.MsgHeaderWrap)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgHeaderWrap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgHeaderWrap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.woqutech.admin.MsgHeaderWrap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.woqutech.admin.MsgHeaderWrap)
    MergeFrom(*source);
  }
}

void MsgHeaderWrap::MergeFrom(const MsgHeaderWrap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.woqutech.admin.MsgHeaderWrap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg_header()) {
    mutable_msg_header()->::com::woqutech::admin::MsgHeader::MergeFrom(from.msg_header());
  }
}

void MsgHeaderWrap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.woqutech.admin.MsgHeaderWrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHeaderWrap::CopyFrom(const MsgHeaderWrap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.woqutech.admin.MsgHeaderWrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHeaderWrap::IsInitialized() const {
  return true;
}

void MsgHeaderWrap::Swap(MsgHeaderWrap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgHeaderWrap::InternalSwap(MsgHeaderWrap* other) {
  using std::swap;
  swap(msg_header_, other->msg_header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgHeaderWrap::GetMetadata() const {
  protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgVal::InitAsDefaultInstance() {
  ::com::woqutech::admin::_MsgVal_default_instance_.i32_val_ = 0;
  ::com::woqutech::admin::_MsgVal_default_instance_.i64_val_ = GOOGLE_LONGLONG(0);
  ::com::woqutech::admin::_MsgVal_default_instance_.f64_val_ = 0;
  ::com::woqutech::admin::_MsgVal_default_instance_.str_val_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgVal::kI32ValFieldNumber;
const int MsgVal::kI64ValFieldNumber;
const int MsgVal::kF64ValFieldNumber;
const int MsgVal::kStrValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgVal::MsgVal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AdminMsg_2eproto::scc_info_MsgVal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.woqutech.admin.MsgVal)
}
MsgVal::MsgVal(const MsgVal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_msg_val();
  switch (from.msg_val_case()) {
    case kI32Val: {
      set_i32_val(from.i32_val());
      break;
    }
    case kI64Val: {
      set_i64_val(from.i64_val());
      break;
    }
    case kF64Val: {
      set_f64_val(from.f64_val());
      break;
    }
    case kStrVal: {
      set_str_val(from.str_val());
      break;
    }
    case MSG_VAL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.woqutech.admin.MsgVal)
}

void MsgVal::SharedCtor() {
  clear_has_msg_val();
}

MsgVal::~MsgVal() {
  // @@protoc_insertion_point(destructor:com.woqutech.admin.MsgVal)
  SharedDtor();
}

void MsgVal::SharedDtor() {
  if (has_msg_val()) {
    clear_msg_val();
  }
}

void MsgVal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgVal::descriptor() {
  ::protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgVal& MsgVal::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AdminMsg_2eproto::scc_info_MsgVal.base);
  return *internal_default_instance();
}


void MsgVal::clear_msg_val() {
// @@protoc_insertion_point(one_of_clear_start:com.woqutech.admin.MsgVal)
  switch (msg_val_case()) {
    case kI32Val: {
      // No need to clear
      break;
    }
    case kI64Val: {
      // No need to clear
      break;
    }
    case kF64Val: {
      // No need to clear
      break;
    }
    case kStrVal: {
      msg_val_.str_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case MSG_VAL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_VAL_NOT_SET;
}


void MsgVal::Clear() {
// @@protoc_insertion_point(message_clear_start:com.woqutech.admin.MsgVal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg_val();
  _internal_metadata_.Clear();
}

bool MsgVal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.woqutech.admin.MsgVal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 i32_val = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_msg_val();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_val_.i32_val_)));
          set_has_i32_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 i64_val = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_msg_val();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &msg_val_.i64_val_)));
          set_has_i64_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double f64_val = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          clear_msg_val();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &msg_val_.f64_val_)));
          set_has_f64_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str_val = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_val()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str_val().data(), static_cast<int>(this->str_val().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.woqutech.admin.MsgVal.str_val"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.woqutech.admin.MsgVal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.woqutech.admin.MsgVal)
  return false;
#undef DO_
}

void MsgVal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.woqutech.admin.MsgVal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 i32_val = 1;
  if (has_i32_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->i32_val(), output);
  }

  // int64 i64_val = 2;
  if (has_i64_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->i64_val(), output);
  }

  // double f64_val = 3;
  if (has_f64_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->f64_val(), output);
  }

  // string str_val = 4;
  if (has_str_val()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_val().data(), static_cast<int>(this->str_val().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.woqutech.admin.MsgVal.str_val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->str_val(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.woqutech.admin.MsgVal)
}

::google::protobuf::uint8* MsgVal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.woqutech.admin.MsgVal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 i32_val = 1;
  if (has_i32_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->i32_val(), target);
  }

  // int64 i64_val = 2;
  if (has_i64_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->i64_val(), target);
  }

  // double f64_val = 3;
  if (has_f64_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->f64_val(), target);
  }

  // string str_val = 4;
  if (has_str_val()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_val().data(), static_cast<int>(this->str_val().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.woqutech.admin.MsgVal.str_val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->str_val(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.woqutech.admin.MsgVal)
  return target;
}

size_t MsgVal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.woqutech.admin.MsgVal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (msg_val_case()) {
    // int32 i32_val = 1;
    case kI32Val: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->i32_val());
      break;
    }
    // int64 i64_val = 2;
    case kI64Val: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->i64_val());
      break;
    }
    // double f64_val = 3;
    case kF64Val: {
      total_size += 1 + 8;
      break;
    }
    // string str_val = 4;
    case kStrVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str_val());
      break;
    }
    case MSG_VAL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgVal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.woqutech.admin.MsgVal)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgVal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgVal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.woqutech.admin.MsgVal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.woqutech.admin.MsgVal)
    MergeFrom(*source);
  }
}

void MsgVal::MergeFrom(const MsgVal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.woqutech.admin.MsgVal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.msg_val_case()) {
    case kI32Val: {
      set_i32_val(from.i32_val());
      break;
    }
    case kI64Val: {
      set_i64_val(from.i64_val());
      break;
    }
    case kF64Val: {
      set_f64_val(from.f64_val());
      break;
    }
    case kStrVal: {
      set_str_val(from.str_val());
      break;
    }
    case MSG_VAL_NOT_SET: {
      break;
    }
  }
}

void MsgVal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.woqutech.admin.MsgVal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgVal::CopyFrom(const MsgVal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.woqutech.admin.MsgVal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgVal::IsInitialized() const {
  return true;
}

void MsgVal::Swap(MsgVal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgVal::InternalSwap(MsgVal* other) {
  using std::swap;
  swap(msg_val_, other->msg_val_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgVal::GetMetadata() const {
  protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PairStrDbl::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PairStrDbl::kKeyFieldNumber;
const int PairStrDbl::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PairStrDbl::PairStrDbl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AdminMsg_2eproto::scc_info_PairStrDbl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.woqutech.admin.PairStrDbl)
}
PairStrDbl::PairStrDbl(const PairStrDbl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  val_ = from.val_;
  // @@protoc_insertion_point(copy_constructor:com.woqutech.admin.PairStrDbl)
}

void PairStrDbl::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val_ = 0;
}

PairStrDbl::~PairStrDbl() {
  // @@protoc_insertion_point(destructor:com.woqutech.admin.PairStrDbl)
  SharedDtor();
}

void PairStrDbl::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PairStrDbl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PairStrDbl::descriptor() {
  ::protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PairStrDbl& PairStrDbl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AdminMsg_2eproto::scc_info_PairStrDbl.base);
  return *internal_default_instance();
}


void PairStrDbl::Clear() {
// @@protoc_insertion_point(message_clear_start:com.woqutech.admin.PairStrDbl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val_ = 0;
  _internal_metadata_.Clear();
}

bool PairStrDbl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.woqutech.admin.PairStrDbl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.woqutech.admin.PairStrDbl.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double val = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &val_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.woqutech.admin.PairStrDbl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.woqutech.admin.PairStrDbl)
  return false;
#undef DO_
}

void PairStrDbl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.woqutech.admin.PairStrDbl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.woqutech.admin.PairStrDbl.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // double val = 2;
  if (this->val() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->val(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.woqutech.admin.PairStrDbl)
}

::google::protobuf::uint8* PairStrDbl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.woqutech.admin.PairStrDbl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.woqutech.admin.PairStrDbl.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // double val = 2;
  if (this->val() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->val(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.woqutech.admin.PairStrDbl)
  return target;
}

size_t PairStrDbl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.woqutech.admin.PairStrDbl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // double val = 2;
  if (this->val() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PairStrDbl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.woqutech.admin.PairStrDbl)
  GOOGLE_DCHECK_NE(&from, this);
  const PairStrDbl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PairStrDbl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.woqutech.admin.PairStrDbl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.woqutech.admin.PairStrDbl)
    MergeFrom(*source);
  }
}

void PairStrDbl::MergeFrom(const PairStrDbl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.woqutech.admin.PairStrDbl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.val() != 0) {
    set_val(from.val());
  }
}

void PairStrDbl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.woqutech.admin.PairStrDbl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PairStrDbl::CopyFrom(const PairStrDbl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.woqutech.admin.PairStrDbl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PairStrDbl::IsInitialized() const {
  return true;
}

void PairStrDbl::Swap(PairStrDbl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PairStrDbl::InternalSwap(PairStrDbl* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(val_, other->val_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PairStrDbl::GetMetadata() const {
  protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PairIntDbl::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PairIntDbl::kKeyFieldNumber;
const int PairIntDbl::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PairIntDbl::PairIntDbl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AdminMsg_2eproto::scc_info_PairIntDbl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.woqutech.admin.PairIntDbl)
}
PairIntDbl::PairIntDbl(const PairIntDbl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&key_, &from.key_,
    static_cast<size_t>(reinterpret_cast<char*>(&val_) -
    reinterpret_cast<char*>(&key_)) + sizeof(val_));
  // @@protoc_insertion_point(copy_constructor:com.woqutech.admin.PairIntDbl)
}

void PairIntDbl::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&val_) -
      reinterpret_cast<char*>(&key_)) + sizeof(val_));
}

PairIntDbl::~PairIntDbl() {
  // @@protoc_insertion_point(destructor:com.woqutech.admin.PairIntDbl)
  SharedDtor();
}

void PairIntDbl::SharedDtor() {
}

void PairIntDbl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PairIntDbl::descriptor() {
  ::protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PairIntDbl& PairIntDbl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AdminMsg_2eproto::scc_info_PairIntDbl.base);
  return *internal_default_instance();
}


void PairIntDbl::Clear() {
// @@protoc_insertion_point(message_clear_start:com.woqutech.admin.PairIntDbl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&val_) -
      reinterpret_cast<char*>(&key_)) + sizeof(val_));
  _internal_metadata_.Clear();
}

bool PairIntDbl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.woqutech.admin.PairIntDbl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double val = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &val_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.woqutech.admin.PairIntDbl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.woqutech.admin.PairIntDbl)
  return false;
#undef DO_
}

void PairIntDbl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.woqutech.admin.PairIntDbl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 key = 1;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->key(), output);
  }

  // double val = 2;
  if (this->val() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->val(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.woqutech.admin.PairIntDbl)
}

::google::protobuf::uint8* PairIntDbl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.woqutech.admin.PairIntDbl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 key = 1;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->key(), target);
  }

  // double val = 2;
  if (this->val() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->val(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.woqutech.admin.PairIntDbl)
  return target;
}

size_t PairIntDbl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.woqutech.admin.PairIntDbl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 key = 1;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->key());
  }

  // double val = 2;
  if (this->val() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PairIntDbl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.woqutech.admin.PairIntDbl)
  GOOGLE_DCHECK_NE(&from, this);
  const PairIntDbl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PairIntDbl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.woqutech.admin.PairIntDbl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.woqutech.admin.PairIntDbl)
    MergeFrom(*source);
  }
}

void PairIntDbl::MergeFrom(const PairIntDbl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.woqutech.admin.PairIntDbl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key() != 0) {
    set_key(from.key());
  }
  if (from.val() != 0) {
    set_val(from.val());
  }
}

void PairIntDbl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.woqutech.admin.PairIntDbl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PairIntDbl::CopyFrom(const PairIntDbl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.woqutech.admin.PairIntDbl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PairIntDbl::IsInitialized() const {
  return true;
}

void PairIntDbl::Swap(PairIntDbl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PairIntDbl::InternalSwap(PairIntDbl* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(val_, other->val_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PairIntDbl::GetMetadata() const {
  protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PairStrStr::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PairStrStr::kKeyFieldNumber;
const int PairStrStr::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PairStrStr::PairStrStr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AdminMsg_2eproto::scc_info_PairStrStr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.woqutech.admin.PairStrStr)
}
PairStrStr::PairStrStr(const PairStrStr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.val().size() > 0) {
    val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val_);
  }
  // @@protoc_insertion_point(copy_constructor:com.woqutech.admin.PairStrStr)
}

void PairStrStr::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PairStrStr::~PairStrStr() {
  // @@protoc_insertion_point(destructor:com.woqutech.admin.PairStrStr)
  SharedDtor();
}

void PairStrStr::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PairStrStr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PairStrStr::descriptor() {
  ::protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PairStrStr& PairStrStr::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AdminMsg_2eproto::scc_info_PairStrStr.base);
  return *internal_default_instance();
}


void PairStrStr::Clear() {
// @@protoc_insertion_point(message_clear_start:com.woqutech.admin.PairStrStr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PairStrStr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.woqutech.admin.PairStrStr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.woqutech.admin.PairStrStr.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string val = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_val()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->val().data(), static_cast<int>(this->val().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.woqutech.admin.PairStrStr.val"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.woqutech.admin.PairStrStr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.woqutech.admin.PairStrStr)
  return false;
#undef DO_
}

void PairStrStr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.woqutech.admin.PairStrStr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.woqutech.admin.PairStrStr.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string val = 2;
  if (this->val().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->val().data(), static_cast<int>(this->val().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.woqutech.admin.PairStrStr.val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->val(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.woqutech.admin.PairStrStr)
}

::google::protobuf::uint8* PairStrStr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.woqutech.admin.PairStrStr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.woqutech.admin.PairStrStr.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string val = 2;
  if (this->val().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->val().data(), static_cast<int>(this->val().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.woqutech.admin.PairStrStr.val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->val(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.woqutech.admin.PairStrStr)
  return target;
}

size_t PairStrStr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.woqutech.admin.PairStrStr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string val = 2;
  if (this->val().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->val());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PairStrStr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.woqutech.admin.PairStrStr)
  GOOGLE_DCHECK_NE(&from, this);
  const PairStrStr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PairStrStr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.woqutech.admin.PairStrStr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.woqutech.admin.PairStrStr)
    MergeFrom(*source);
  }
}

void PairStrStr::MergeFrom(const PairStrStr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.woqutech.admin.PairStrStr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.val().size() > 0) {

    val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val_);
  }
}

void PairStrStr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.woqutech.admin.PairStrStr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PairStrStr::CopyFrom(const PairStrStr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.woqutech.admin.PairStrStr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PairStrStr::IsInitialized() const {
  return true;
}

void PairStrStr::Swap(PairStrStr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PairStrStr::InternalSwap(PairStrStr* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  val_.Swap(&other->val_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PairStrStr::GetMetadata() const {
  protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgResult::InitAsDefaultInstance() {
  ::com::woqutech::admin::_MsgResult_default_instance_._instance.get_mutable()->msg_header_ = const_cast< ::com::woqutech::admin::MsgHeader*>(
      ::com::woqutech::admin::MsgHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgResult::kMsgHeaderFieldNumber;
const int MsgResult::kRcFieldNumber;
const int MsgResult::kMsgFieldNumber;
const int MsgResult::kRtPairsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgResult::MsgResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AdminMsg_2eproto::scc_info_MsgResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.woqutech.admin.MsgResult)
}
MsgResult::MsgResult(const MsgResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rt_pairs_(from.rt_pairs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rc().size() > 0) {
    rc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rc_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_msg_header()) {
    msg_header_ = new ::com::woqutech::admin::MsgHeader(*from.msg_header_);
  } else {
    msg_header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:com.woqutech.admin.MsgResult)
}

void MsgResult::SharedCtor() {
  rc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_header_ = NULL;
}

MsgResult::~MsgResult() {
  // @@protoc_insertion_point(destructor:com.woqutech.admin.MsgResult)
  SharedDtor();
}

void MsgResult::SharedDtor() {
  rc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete msg_header_;
}

void MsgResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgResult::descriptor() {
  ::protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgResult& MsgResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AdminMsg_2eproto::scc_info_MsgResult.base);
  return *internal_default_instance();
}


void MsgResult::Clear() {
// @@protoc_insertion_point(message_clear_start:com.woqutech.admin.MsgResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rt_pairs_.Clear();
  rc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_header_ != NULL) {
    delete msg_header_;
  }
  msg_header_ = NULL;
  _internal_metadata_.Clear();
}

bool MsgResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.woqutech.admin.MsgResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.woqutech.admin.MsgHeader msg_header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rc().data(), static_cast<int>(this->rc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.woqutech.admin.MsgResult.rc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.woqutech.admin.MsgResult.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.woqutech.admin.PairStrStr rt_pairs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rt_pairs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.woqutech.admin.MsgResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.woqutech.admin.MsgResult)
  return false;
#undef DO_
}

void MsgResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.woqutech.admin.MsgResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.woqutech.admin.MsgHeader msg_header = 1;
  if (this->has_msg_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_msg_header(), output);
  }

  // string rc = 2;
  if (this->rc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rc().data(), static_cast<int>(this->rc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.woqutech.admin.MsgResult.rc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rc(), output);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.woqutech.admin.MsgResult.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  // repeated .com.woqutech.admin.PairStrStr rt_pairs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rt_pairs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->rt_pairs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.woqutech.admin.MsgResult)
}

::google::protobuf::uint8* MsgResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.woqutech.admin.MsgResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.woqutech.admin.MsgHeader msg_header = 1;
  if (this->has_msg_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_msg_header(), deterministic, target);
  }

  // string rc = 2;
  if (this->rc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rc().data(), static_cast<int>(this->rc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.woqutech.admin.MsgResult.rc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rc(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.woqutech.admin.MsgResult.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  // repeated .com.woqutech.admin.PairStrStr rt_pairs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rt_pairs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->rt_pairs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.woqutech.admin.MsgResult)
  return target;
}

size_t MsgResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.woqutech.admin.MsgResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .com.woqutech.admin.PairStrStr rt_pairs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->rt_pairs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rt_pairs(static_cast<int>(i)));
    }
  }

  // string rc = 2;
  if (this->rc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rc());
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // .com.woqutech.admin.MsgHeader msg_header = 1;
  if (this->has_msg_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msg_header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.woqutech.admin.MsgResult)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.woqutech.admin.MsgResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.woqutech.admin.MsgResult)
    MergeFrom(*source);
  }
}

void MsgResult::MergeFrom(const MsgResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.woqutech.admin.MsgResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rt_pairs_.MergeFrom(from.rt_pairs_);
  if (from.rc().size() > 0) {

    rc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rc_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_msg_header()) {
    mutable_msg_header()->::com::woqutech::admin::MsgHeader::MergeFrom(from.msg_header());
  }
}

void MsgResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.woqutech.admin.MsgResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgResult::CopyFrom(const MsgResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.woqutech.admin.MsgResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgResult::IsInitialized() const {
  return true;
}

void MsgResult::Swap(MsgResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgResult::InternalSwap(MsgResult* other) {
  using std::swap;
  CastToBase(&rt_pairs_)->InternalSwap(CastToBase(&other->rt_pairs_));
  rc_.Swap(&other->rc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msg_header_, other->msg_header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgResult::GetMetadata() const {
  protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgCmd::InitAsDefaultInstance() {
  ::com::woqutech::admin::_MsgCmd_default_instance_._instance.get_mutable()->msg_header_ = const_cast< ::com::woqutech::admin::MsgHeader*>(
      ::com::woqutech::admin::MsgHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgCmd::kMsgHeaderFieldNumber;
const int MsgCmd::kCmdFieldNumber;
const int MsgCmd::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgCmd::MsgCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AdminMsg_2eproto::scc_info_MsgCmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.woqutech.admin.MsgCmd)
}
MsgCmd::MsgCmd(const MsgCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cmd().size() > 0) {
    cmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_);
  }
  if (from.has_msg_header()) {
    msg_header_ = new ::com::woqutech::admin::MsgHeader(*from.msg_header_);
  } else {
    msg_header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:com.woqutech.admin.MsgCmd)
}

void MsgCmd::SharedCtor() {
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_header_ = NULL;
}

MsgCmd::~MsgCmd() {
  // @@protoc_insertion_point(destructor:com.woqutech.admin.MsgCmd)
  SharedDtor();
}

void MsgCmd::SharedDtor() {
  cmd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete msg_header_;
}

void MsgCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgCmd::descriptor() {
  ::protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgCmd& MsgCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AdminMsg_2eproto::scc_info_MsgCmd.base);
  return *internal_default_instance();
}


void MsgCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:com.woqutech.admin.MsgCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && msg_header_ != NULL) {
    delete msg_header_;
  }
  msg_header_ = NULL;
  _internal_metadata_.Clear();
}

bool MsgCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.woqutech.admin.MsgCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.woqutech.admin.MsgHeader msg_header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cmd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmd().data(), static_cast<int>(this->cmd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.woqutech.admin.MsgCmd.cmd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.woqutech.admin.PairStrStr params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.woqutech.admin.MsgCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.woqutech.admin.MsgCmd)
  return false;
#undef DO_
}

void MsgCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.woqutech.admin.MsgCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.woqutech.admin.MsgHeader msg_header = 1;
  if (this->has_msg_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_msg_header(), output);
  }

  // string cmd = 2;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.woqutech.admin.MsgCmd.cmd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cmd(), output);
  }

  // repeated .com.woqutech.admin.PairStrStr params = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->params(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.woqutech.admin.MsgCmd)
}

::google::protobuf::uint8* MsgCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.woqutech.admin.MsgCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.woqutech.admin.MsgHeader msg_header = 1;
  if (this->has_msg_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_msg_header(), deterministic, target);
  }

  // string cmd = 2;
  if (this->cmd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd().data(), static_cast<int>(this->cmd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.woqutech.admin.MsgCmd.cmd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cmd(), target);
  }

  // repeated .com.woqutech.admin.PairStrStr params = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->params(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.woqutech.admin.MsgCmd)
  return target;
}

size_t MsgCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.woqutech.admin.MsgCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .com.woqutech.admin.PairStrStr params = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->params(static_cast<int>(i)));
    }
  }

  // string cmd = 2;
  if (this->cmd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmd());
  }

  // .com.woqutech.admin.MsgHeader msg_header = 1;
  if (this->has_msg_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msg_header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.woqutech.admin.MsgCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.woqutech.admin.MsgCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.woqutech.admin.MsgCmd)
    MergeFrom(*source);
  }
}

void MsgCmd::MergeFrom(const MsgCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.woqutech.admin.MsgCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.cmd().size() > 0) {

    cmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_);
  }
  if (from.has_msg_header()) {
    mutable_msg_header()->::com::woqutech::admin::MsgHeader::MergeFrom(from.msg_header());
  }
}

void MsgCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.woqutech.admin.MsgCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCmd::CopyFrom(const MsgCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.woqutech.admin.MsgCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCmd::IsInitialized() const {
  return true;
}

void MsgCmd::Swap(MsgCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgCmd::InternalSwap(MsgCmd* other) {
  using std::swap;
  CastToBase(&params_)->InternalSwap(CastToBase(&other->params_));
  cmd_.Swap(&other->cmd_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msg_header_, other->msg_header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgCmd::GetMetadata() const {
  protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgMetrics::InitAsDefaultInstance() {
  ::com::woqutech::admin::_MsgMetrics_default_instance_._instance.get_mutable()->msg_header_ = const_cast< ::com::woqutech::admin::MsgHeader*>(
      ::com::woqutech::admin::MsgHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgMetrics::kMsgHeaderFieldNumber;
const int MsgMetrics::kTransCommitTotalFieldNumber;
const int MsgMetrics::kTransBeginProcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgMetrics::MsgMetrics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AdminMsg_2eproto::scc_info_MsgMetrics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.woqutech.admin.MsgMetrics)
}
MsgMetrics::MsgMetrics(const MsgMetrics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      trans_begin_proc_(from.trans_begin_proc_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg_header()) {
    msg_header_ = new ::com::woqutech::admin::MsgHeader(*from.msg_header_);
  } else {
    msg_header_ = NULL;
  }
  trans_commit_total_ = from.trans_commit_total_;
  // @@protoc_insertion_point(copy_constructor:com.woqutech.admin.MsgMetrics)
}

void MsgMetrics::SharedCtor() {
  ::memset(&msg_header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trans_commit_total_) -
      reinterpret_cast<char*>(&msg_header_)) + sizeof(trans_commit_total_));
}

MsgMetrics::~MsgMetrics() {
  // @@protoc_insertion_point(destructor:com.woqutech.admin.MsgMetrics)
  SharedDtor();
}

void MsgMetrics::SharedDtor() {
  if (this != internal_default_instance()) delete msg_header_;
}

void MsgMetrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgMetrics::descriptor() {
  ::protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgMetrics& MsgMetrics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AdminMsg_2eproto::scc_info_MsgMetrics.base);
  return *internal_default_instance();
}


void MsgMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:com.woqutech.admin.MsgMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trans_begin_proc_.Clear();
  if (GetArenaNoVirtual() == NULL && msg_header_ != NULL) {
    delete msg_header_;
  }
  msg_header_ = NULL;
  trans_commit_total_ = 0;
  _internal_metadata_.Clear();
}

bool MsgMetrics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.woqutech.admin.MsgMetrics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.woqutech.admin.MsgHeader msg_header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double trans_commit_total = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &trans_commit_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.woqutech.admin.PairIntDbl trans_begin_proc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_trans_begin_proc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.woqutech.admin.MsgMetrics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.woqutech.admin.MsgMetrics)
  return false;
#undef DO_
}

void MsgMetrics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.woqutech.admin.MsgMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.woqutech.admin.MsgHeader msg_header = 1;
  if (this->has_msg_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_msg_header(), output);
  }

  // double trans_commit_total = 2;
  if (this->trans_commit_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->trans_commit_total(), output);
  }

  // repeated .com.woqutech.admin.PairIntDbl trans_begin_proc = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trans_begin_proc_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->trans_begin_proc(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.woqutech.admin.MsgMetrics)
}

::google::protobuf::uint8* MsgMetrics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.woqutech.admin.MsgMetrics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.woqutech.admin.MsgHeader msg_header = 1;
  if (this->has_msg_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_msg_header(), deterministic, target);
  }

  // double trans_commit_total = 2;
  if (this->trans_commit_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->trans_commit_total(), target);
  }

  // repeated .com.woqutech.admin.PairIntDbl trans_begin_proc = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trans_begin_proc_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->trans_begin_proc(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.woqutech.admin.MsgMetrics)
  return target;
}

size_t MsgMetrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.woqutech.admin.MsgMetrics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .com.woqutech.admin.PairIntDbl trans_begin_proc = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->trans_begin_proc_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->trans_begin_proc(static_cast<int>(i)));
    }
  }

  // .com.woqutech.admin.MsgHeader msg_header = 1;
  if (this->has_msg_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msg_header_);
  }

  // double trans_commit_total = 2;
  if (this->trans_commit_total() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgMetrics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.woqutech.admin.MsgMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgMetrics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgMetrics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.woqutech.admin.MsgMetrics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.woqutech.admin.MsgMetrics)
    MergeFrom(*source);
  }
}

void MsgMetrics::MergeFrom(const MsgMetrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.woqutech.admin.MsgMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trans_begin_proc_.MergeFrom(from.trans_begin_proc_);
  if (from.has_msg_header()) {
    mutable_msg_header()->::com::woqutech::admin::MsgHeader::MergeFrom(from.msg_header());
  }
  if (from.trans_commit_total() != 0) {
    set_trans_commit_total(from.trans_commit_total());
  }
}

void MsgMetrics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.woqutech.admin.MsgMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgMetrics::CopyFrom(const MsgMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.woqutech.admin.MsgMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgMetrics::IsInitialized() const {
  return true;
}

void MsgMetrics::Swap(MsgMetrics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgMetrics::InternalSwap(MsgMetrics* other) {
  using std::swap;
  CastToBase(&trans_begin_proc_)->InternalSwap(CastToBase(&other->trans_begin_proc_));
  swap(msg_header_, other->msg_header_);
  swap(trans_commit_total_, other->trans_commit_total_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgMetrics::GetMetadata() const {
  protobuf_AdminMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AdminMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace admin
}  // namespace woqutech
}  // namespace com
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::woqutech::admin::MsgHeader* Arena::CreateMaybeMessage< ::com::woqutech::admin::MsgHeader >(Arena* arena) {
  return Arena::CreateInternal< ::com::woqutech::admin::MsgHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::woqutech::admin::MsgHeaderWrap* Arena::CreateMaybeMessage< ::com::woqutech::admin::MsgHeaderWrap >(Arena* arena) {
  return Arena::CreateInternal< ::com::woqutech::admin::MsgHeaderWrap >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::woqutech::admin::MsgVal* Arena::CreateMaybeMessage< ::com::woqutech::admin::MsgVal >(Arena* arena) {
  return Arena::CreateInternal< ::com::woqutech::admin::MsgVal >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::woqutech::admin::PairStrDbl* Arena::CreateMaybeMessage< ::com::woqutech::admin::PairStrDbl >(Arena* arena) {
  return Arena::CreateInternal< ::com::woqutech::admin::PairStrDbl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::woqutech::admin::PairIntDbl* Arena::CreateMaybeMessage< ::com::woqutech::admin::PairIntDbl >(Arena* arena) {
  return Arena::CreateInternal< ::com::woqutech::admin::PairIntDbl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::woqutech::admin::PairStrStr* Arena::CreateMaybeMessage< ::com::woqutech::admin::PairStrStr >(Arena* arena) {
  return Arena::CreateInternal< ::com::woqutech::admin::PairStrStr >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::woqutech::admin::MsgResult* Arena::CreateMaybeMessage< ::com::woqutech::admin::MsgResult >(Arena* arena) {
  return Arena::CreateInternal< ::com::woqutech::admin::MsgResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::woqutech::admin::MsgCmd* Arena::CreateMaybeMessage< ::com::woqutech::admin::MsgCmd >(Arena* arena) {
  return Arena::CreateInternal< ::com::woqutech::admin::MsgCmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::woqutech::admin::MsgMetrics* Arena::CreateMaybeMessage< ::com::woqutech::admin::MsgMetrics >(Arena* arena) {
  return Arena::CreateInternal< ::com::woqutech::admin::MsgMetrics >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
